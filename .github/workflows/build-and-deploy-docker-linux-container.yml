name: Build container image and deploy on dockerhub
on:
  pull_request:
  push:
    tags: '*'
    branches-ignore:
      - 'renovate**'
    paths-ignore:
      - 'README.md'
      - 'renovate.json'

jobs:
  Build-And-Deploy-Container:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Fetch tags
        shell: bash
        run: git fetch --tags -f
      - name: Compute name
        env:
          SLUG: ${{ github.repository }}
        run: |
          IMAGE_NAME="$(echo $SLUG | tr '[:upper:]' '[:lower:]') | sed -e 's/docker-//'"
          echo IMAGE_NAME="$IMAGE_NAME"
          echo IMAGE_NAME="$IMAGE_NAME" >> $GITHUB_ENV
      - name: Compute version
        run: |
          VERSION="$(git rev-list --all --count).$(date +%Y%m%d.%H%M)"
          echo VERSION="$VERSION"
          echo VERSION="$VERSION" >> $GITHUB_ENV
      - name: Build Image
        run: |
          echo docker build -t "$IMAGE_NAME:latest" -t "$IMAGE_NAME:$VERSION" .
          docker build -t "$IMAGE_NAME:latest" -t "$IMAGE_NAME:$VERSION" .
      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: danysk
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin docker.io
      - name: Deploy Image
        if: ${{ github.event_name != 'pull_request' }}
        run: docker push --all-tags $IMAGE_NAME
      - name: Run container and export into tarball
        run: |
          docker run --name wsl --net=host --env="DISPLAY" --volume="$HOME/.Xauthority:/.Xauthority:rw" "$IMAGE_NAME:$VERSION"
          docker export --output="wsl.tar" wsl
      - name: Compress the tarball
        run: zstd --no-progress wsl.tar -o wsl.tar.zstd && rm wsl.tar
      - name: Split the tarball into manageable chunks
        run: split -d -b 1G wsl.tar.zstd wsl.tar.zstd.
      - name: Release
        if: ${{ github.event_name != 'pull_request' }}
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          files: "wsl.tar.zstd.*"
          name: ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          fail_on_unmatched_files: true
